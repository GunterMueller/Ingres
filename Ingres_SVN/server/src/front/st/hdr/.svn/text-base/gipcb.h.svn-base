/*
** Copyright Ingres Corporation 2006. All rights reserved
*/

# include <gtk/gtk.h>

/*
** Name: gtkcb.h
**
** Description:
**	
**	Header file for GTK callback funtions used by Linux GUI installer
**	and Ingres package manager. Initial file generated by GLADE
**	(GTK GUI designer)
**
** History:
**
**	04-Jul-2006 (hanje04)
**	    SIR 116877
**	    Created.
**	25-Oct-2006 (hanje04)
**	    SIR 116877
**	    Add new prototypes, remove the ones for deleted functions.
**	26-Oct-2006 (hanje04)
**	    SIR 116877
**	    Clean up prototypes after merging callbacks.
**	24-Nov-2006 (hanje04)
**	    SIR 116877
**	    Add prototype for log file size slider callback funtion.
**	27-Nov-2006 (hanje04)
**	    SIR 116877
**	    Modify interface to browse_location_gtk22(), to allow directory
**	    selection widget to default to the entered value if it exists.
**	27-Feb-2007 (hanje04)
**	    SD 115861
**	    BUG 117801
**	    Add prototype for on_use_iisys_log_default_toggled() to
**	    to improve validation checking on log locations.
**	02-Mar-2007 (hanje04)
**	    SD 115856
**	    BUG 117818
**	    Update prototype for browse_location_gtk22() to allow toggling
**	    of hiding of the directory creation button in the browse
**	    dialog.
**	15-Mar-2007 (hanje04)
**	    Add prototype for get_selected_RF_filename() to save off response
**	    file
*/

/*
** NULL out unsupported gtk functions. Need to support GTK version 2.2
** but GUI was designed originally against 2.8
*/
# define gtk_alignment_set_padding
# define gtk_button_set_focus_on_click
# define gtk_event_box_set_visible_window
# define gtk_text_view_set_accepts_tab

void
on_basic_install_checked               (GtkButton       *button,
                                        gpointer         user_data);

void
on_adv_install_clicked                 (GtkButton       *button,
                                        gpointer         user_data);

void
on_go_clicked                          (GtkButton       *button,
                                        gpointer         user_data);

void
on_browse_clicked                      (GtkButton       *button,
                                        gpointer         user_data);
									
void
dir_ok_sel				(GtkWidget        *w,
                 		 	GtkFileSelection *fs );
             
void
on_adv_install_clicked                 (GtkButton       *button,
                                        gpointer         user_data);

void
on_go_clicked                          (GtkButton       *button,
                                        gpointer         user_data);

void
on_browse_clicked                      (GtkButton       *button,
                                        gpointer         user_data);
									
void
on_iisystem_changed                    (GtkEditable     *editable,
                                        gpointer         user_data);

gint
delete_event                           (GtkButton       *button,
                                        gpointer         user_data);

void
on_typical_inst_clicked                (GtkButton       *button,
                                        gpointer         user_data);

void
on_full_install_clicked                (GtkButton       *button,
                                        gpointer         user_data);

void
on_custom_install_clicked              (GtkButton       *button,
                                        gpointer         user_data);
void
set_inst_pkg_check_buttons				   (void);

void
on_checkcorepkg_toggled                (GtkToggleButton *togglebutton,
                                        gpointer         user_data);

void
on_checkdbmspkg_toggled                (GtkToggleButton *togglebutton,
                                        gpointer         user_data);

void
on_checknetpkg_toggled                 (GtkToggleButton *togglebutton,
                                        gpointer         user_data);

void
on_checkodbcpkg_toggled                (GtkToggleButton *togglebutton,
                                        gpointer         user_data);

void
on_checkreppkg_toggled                 (GtkToggleButton *togglebutton,
                                        gpointer         user_data);

void
on_checkabfpkg_toggled                 (GtkToggleButton *togglebutton,
                                        gpointer         user_data);

void
on_checkstarpkg_toggled                (GtkToggleButton *togglebutton,
                                        gpointer         user_data);

void
on_checkjdbcpkg_toggled                (GtkToggleButton *togglebutton,
                                        gpointer         user_data);

void
on_checkicepkg_toggled                 (GtkToggleButton *togglebutton,
                                        gpointer         user_data);

void
on_checkdocpkg_toggled                 (GtkToggleButton *togglebutton,
                                        gpointer         user_data);
void
return_to_launcher                     (GtkButton       *button,
                                        gpointer         user_data);
void
show_launch_window                     (GtkButton       *button,
                                        gpointer         user_data);
void
on_use_iisys_default_toggled           (GtkToggleButton *togglebutton,
                                        gpointer         user_data);
void
on_use_iisys_log_default_toggled       (GtkToggleButton *togglebutton,
                                        gpointer         user_data);
void
on_browse_iisys_clicked                (GtkButton       *button,
                                        gpointer         user_data);
void
on_browse_iidb_clicked                 (GtkButton       *button,
                                        gpointer         user_data);
void
on_browse_ckp_clicked                  (GtkButton       *button,
                                        gpointer         user_data);
void
on_browse_jnl_clicked                  (GtkButton       *button,
                                        gpointer         user_data);
void
on_browse_work_clicked                 (GtkButton       *button,
                                        gpointer         user_data);
void
on_browse_dump_clicked                 (GtkButton       *button,
                                       gpointer         user_data);
void
on_browse_plog_clicked                 (GtkButton       *button,
                                        gpointer         user_data);
void
on_browse_blog_clicked                 (GtkButton       *button,
                                        gpointer         user_data);
void
on_bkp_log_enabled_toggled             (GtkToggleButton *togglebutton,
                                        gpointer         user_data);
void
on_ii_database_changed                 (GtkEditable     *editable,
                                        gpointer         user_data);
void
on_ii_checkpoint_changed               (GtkEditable     *editable,
                                        gpointer         user_data);
void
on_ii_journal_changed                  (GtkEditable     *editable,
                                        gpointer         user_data);
void
on_ii_work_changed                     (GtkEditable     *editable,
                                        gpointer         user_data);
void
on_ii_dump_changed                     (GtkEditable     *editable,
                                        gpointer         user_data);
void
on_primary_log_file_loc_changed        (GtkEditable     *editable,
                                        gpointer         user_data);
void
on_bkp_log_file_loc_changed            (GtkEditable     *editable,
                                        gpointer         user_data);

void
on_ii_system_entry_changed             (GtkEditable     *editable,
                                        gpointer         user_data);

void
on_install_clicked                     (GtkButton       *button,
                                        gpointer         user_data);

void
on_finish_clicked                      (GtkButton       *button,
                                        gpointer         user_data);

void
on_finish_clicked                      (GtkButton       *button,
                                        gpointer         user_data);

void
on_runlaunchpad_toggled                (GtkToggleButton *togglebutton,
                                        gpointer         user_data);

void
on_finish_released                     (GtkButton       *button,
                                        gpointer         user_data);

void
on_finish_clicked                      (GtkButton       *button,
                                        gpointer         user_data);

void
on_finish_clicked                      (GtkButton       *button,
                                        gpointer         user_data);

void
on_install_clicked                     (GtkButton       *button,
                                        gpointer         user_data);

void
on_back_clicked                        (GtkButton       *button,
                                        gpointer         user_data);

void
on_back_to_start_clicked               (GtkButton       *button,
                                        gpointer         user_data);

void
on_to_summary_clicked                  (GtkButton       *button,
                                        gpointer         user_data);

void
on_item1_activate                      (GtkMenuItem     *menuitem,
                                        gpointer         user_data);

void
on_master_next_clicked                 (GtkButton       *button,
                                   	gpointer         user_data);

void
on_master_back_clicked                 (GtkButton       *button,
                                        gpointer         user_data);
void
on_to_summary_clicked                  (GtkButton       *button,
                                        gpointer         user_data);

void
on_back_to_start_clicked               (GtkButton       *button,
                                        gpointer         user_data);

void
on_show_summary_clicked                (GtkButton       *button,
                                        gpointer         user_data);

void
on_back_from_summary_clicked           (GtkButton       *button,
                                        gpointer         user_data);

void
on_to_summary_clicked                  (GtkButton       *button,
                                        gpointer         user_data);

void
on_master_next_clicked                 (GtkButton       *button,
                                        gpointer         user_data);

void
on_go_clicked                          (GtkButton       *button,
                                        gpointer         user_data);

void
on_install_clicked                     (GtkButton       *button,
                                        gpointer         user_data);

void
on_master_next_clicked                 (GtkButton       *button,
                                        gpointer         user_data);

void
on_modify_instance_clicked      	(GtkButton       *button,
                                        gpointer         user_data);

void
on_new_instance_clicked			(GtkButton       *button,
                                        gpointer         user_data);

void
on_upgrade_instance_clicked      	(GtkButton       *button,
                                        gpointer         user_data);

void
on_use_custom_id_radio_clicked         (GtkButton       *button,
                                        gpointer         user_data);

void
on_use_default_ID_radio_activate       (GtkButton       *button,
                                        gpointer         user_data);

void
on_instID_changed                      (GtkEditable     *editable,
                                        gpointer         user_data);

void
on_use_default_ID_radio_clicked        (GtkButton       *button,
                                        gpointer         user_data);

void
on_txlog_size_spinner_value_changed    (GtkSpinButton   *spinbutton,
                                        gpointer         user_data);

void
on_sql92_enabled_ckeck_toggled         (GtkToggleButton *togglebutton,
                                        gpointer         user_data);
										

void
on_custom_inst_owner_clicked           (GtkButton       *button,
                                        gpointer         user_data);

void
on_default_inst_owner_clicked          (GtkToggleButton *togglebutton,
                                        gpointer         user_data);

void
on_inst_owner_entry_changed            (GtkEditable     *editable,
                                        gpointer         user_data);

void
on_start_on_boot_check_toggled         (GtkToggleButton *togglebutton,
                                        gpointer         user_data);

void
on_demodb_check_toggled                (GtkToggleButton *togglebutton,
                                        gpointer         user_data);

void
on_ingres_desktop_check_toggled        (GtkToggleButton *togglebutton,
                                        gpointer         user_data);

void
on_remove_inst_clicked                 (GtkButton       *button,
                                        gpointer         user_data);

void
on_modify_inst_comp_clicked            (GtkButton       *button,
                                        gpointer         user_data);
										
void
instance_selection_changed 		(GtkTreeSelection *selection,
					gpointer data);

void
on_ug_checkdbmspkg_toggled             (GtkToggleButton *togglebutton,
                                        gpointer         user_data);

void
on_ug_checknetpkg_toggled              (GtkToggleButton *togglebutton,
                                        gpointer         user_data);

void
on_ug_checkodbcpkg_toggled             (GtkToggleButton *togglebutton,
                                        gpointer         user_data);

void
on_ug_checkreppkg_toggled              (GtkToggleButton *togglebutton,
                                        gpointer         user_data);

void
on_ug_checkabfpkg_toggled              (GtkToggleButton *togglebutton,
                                        gpointer         user_data);

void
on_ug_checkstarpkg_toggled             (GtkToggleButton *togglebutton,
                                        gpointer         user_data);

void
on_ug_checkicepkg_toggled              (GtkToggleButton *togglebutton,
                                        gpointer         user_data);

void
on_ug_checkdocpkg_toggled              (GtkToggleButton *togglebutton,
                                        gpointer         user_data);

void
on_typical_client_inst_clicked         (GtkButton       *button,
                                        gpointer         user_data);

void
on_save_rf_clicked                     (GtkButton       *button,
                                        gpointer         user_data);

void
on_rfdef_linux_radio_toggled           (GtkToggleButton *togglebutton,
                                        gpointer         user_data);

void
on_WinStartIngSysButton_toggled        (GtkToggleButton *togglebutton,
                                        gpointer         user_data);

void
on_WinStartIngAsSysRadio_toggled       (GtkToggleButton *togglebutton,
                                        gpointer         user_data);

void
on_WinUsrEntry_changed                 (GtkEditable     *editable,
                                        gpointer         user_data);

void
on_WinPwdEntry_changed                 (GtkEditable     *editable,
                                        gpointer         user_data);

void
on_WinAddIngPathCheck_toggled          (GtkToggleButton *togglebutton,
                                        gpointer         user_data);

void
on_WinInstDemoClick_toggled            (GtkToggleButton *togglebutton,
                                        gpointer         user_data);

void
on_remove_all_files_toggled            (GtkToggleButton *togglebutton,
                                        gpointer         user_data);

void
on_up_all_usr_db_toggled               (GtkToggleButton *togglebutton,
                                        gpointer         user_data);

void
set_screen				( gint stage_num );

void
on_change_ii_charset_button_clicked    (GtkButton       *button,
                                        gpointer         user_data);

void
popup_list_selected			(GtkTreeSelection *selection,
					gpointer data);

void
update_locale_entry			( GtkTreeSelection *selection,
					gpointer data);

void
on_change_charset_clicked              (GtkButton       *button,
                                        gpointer         user_data);

void
on_change_timezone_clicked             (GtkButton       *button,
                                        gpointer         user_data);

void
browse_location_gtk22			( GCallback	callback,
					GtkWidget *location_entry,
					bool crloc );

void
get_selected_ii_system			( GtkWidget *widget,
					gpointer user_data );

void
get_selected_database		( GtkWidget *widget,
					gpointer user_data );

void
get_selected_checkpoint		( GtkWidget *widget,
					gpointer user_data );

void
get_selected_journal		( GtkWidget *widget,
					gpointer user_data );

void
get_selected_work		( GtkWidget *widget,
					gpointer user_data );

void
get_selected_dump		( GtkWidget *widget,
					gpointer user_data );
void
get_selected_plog		( GtkWidget *widget,
					gpointer user_data );

void
get_selected_blog		( GtkWidget *widget,
					gpointer user_data );

void
on_default_inst_group_clicked          (GtkButton       *button,
                                        gpointer         user_data);

void
on_inst_group_entry_changed            (GtkEditable     *editable,
                                        gpointer         user_data);


void
on_CharsetEntry_changed                (GtkEditable     *editable,
                                        gpointer         user_data);

void
on_TimezoneEntry_changed               (GtkEditable     *editable,
                                        gpointer         user_data);

void
on_TermTypeEntry_changed               (GtkEditable     *editable,
                                        gpointer         user_data);

void
on_termtype_change_button_clicked      (GtkButton       *button,
                                        gpointer         user_data);

void
on_log_size_hscale_value_changed       (GtkRange        *range,
                                        gpointer         user_data);

void
on_ansi_date_type_radio_toggled        (GtkToggleButton *togglebutton,
                                        gpointer         user_data);

void
get_selected_RF_filename                ( GtkWidget *widget,
                                        gpointer user_data );
