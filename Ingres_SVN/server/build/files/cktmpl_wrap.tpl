! The CKTMPL_WRAP.TPL is a template for invoking a shell script to trap warning
! messages generated by the backup utility (e.g. tar) performing an online 
! checkpoint, specifically when the backup utility reports an error because the
! size of files changed during the backup.
!
! To prevent a security loophole, it is not possible to use $II_SYSTEM to
! reference the location of the shell script used to detect/handle the warnings
! logged by the backup utility (without specifying absolute paths, it is
! possible for any user with privilege to checkpoint a database to have a
! script they created executed as Ingres, with all the priviliges of the Ingres
! account).
!
! In order to make use of the wrapper shell script, please enter the following
! command
!
!     sed -e "/^W/s^--II_SYSTEM^$II_SYSTEM^g" cktmpl_wrap.tpl >cktmpl_wrap.def
!
! Then define II_CKTMPL_FILE as $II_SYSTEM/ingres/files/cktmpl_wrap.def
!
BSTD:	/bin/echo beginning checkpoint to tape %C of %N locations
BSDD:	/bin/echo beginning checkpoint to disk %C of %N locations
ESTD:   /bin/echo ending checkpoint to tape %C of %N locations
ESDD:   /bin/echo ending checkpoint to disk %C of %N locations
PSTD:	/bin/echo mount tape %M and press return; read foo; 
WSTD:	cd %D; --II_SYSTEM/ingres/bin/cktmpl_wrap /bin/tar cbf 20 %C *
PSDD:   /bin/echo executing checkpoint to disk 
WSDD:	cd %D; --II_SYSTEM/ingres/bin/cktmpl_wrap /bin/tar cf %A *
PSDR:   /bin/echo executing checkpoint to disk 
WSDR:   dd if=%E of=%A count=%P bs=%Q
PSTR:   /bin/echo mount tape %M and press return; read foo;
WSTR:   dd if=%E of=%C count=%P bs=%Q
BSTT:   /bin/echo PARTIAL: beginning checkpoint to tape %C of %N locations
BSDT:   /bin/echo PARTIAL: beginning checkpoint to disk %C of %N locations
ESTT:   /bin/echo PARTIAL: ending checkpoint to tape %C of %N locations
ESDT:   /bin/echo PARTIAL: ending checkpoint to disk %C of %N locations
PSTT:   /bin/echo PARTIAL: mount tape %K and press return; read foo;
WSTT:   cd %D; --II_SYSTEM/ingres/bin/cktmpl_wrap /bin/tar cbf 20 %C %B
PSDT:   /bin/echo executing checkpoint to disk %C of %N locations
WSDT:   cd %D; --II_SYSTEM/ingres/bin/cktmpl_wrap /bin/tar cf %A %B
BRDD:	/bin/echo beginning restore of disk %C of %N locations
BRTD:	/bin/echo beginning restore of tape %C of %N locations
BRDT:   /bin/echo PARTIAL: beginning restore of disk %C of %N locations
BRTT:   /bin/echo PARTIAL: beginning restore of tape %C of %N locations
BJDA:   /bin/echo beginning restore of journals
BJTA:   /bin/echo beginning restore of journals
BUDA:   /bin/echo beginning restore of dumps
BUTA:   /bin/echo beginning restore of dumps
PRDD:   /bin/echo executing restore to disk %C of %N locations
WRDD:	cd %D; /bin/tar xf %A
PRTD:	/bin/echo mount tape %M and press return; read foo; 
WRTD:	cd %D; /bin/tar xf %C
PRDT:	/bin/echo restoring table %X in database location %D;
WRDT:	cd %D; /bin/tar xf %A %B
PRTT:	/bin/echo mount tape %K and press return; read foo; 
WRTT:	cd %D; /bin/tar xf %C %B
PRDR:   /bin/echo executing restore to disk %C of %N locations
WRDR:   dd if=%A of=%E count=%P bs=%Q
PRTR:   /bin/echo mount tape %M and press return; read foo;
WRTR:   dd if=%A of=%C count=%P bs=%Q
WJDA:	/bin/true
WJTA:	/bin/true
WUDA:   /bin/true
WUTA:   /bin/true
WCDA:   /bin/echo Checking database snapshot for table level recovery
WCTA:   /bin/echo Checking database snapshot for table level recovery
WDDD:   /bin/echo deleting files in location %D; cd %D; rm -f *
WDTD:   /bin/echo deleting files in location %D; cd %D; rm -f *
WDTR:   /bin/true
WDDT:   /bin/echo deleting table %X in database location %D
WDTT:   /bin/echo deleting table %X in database location %D
IRDT:   /bin/echo beginning table level recovery
IRTT:   /bin/echo beginning table level recovery
FRDT:	/bin/echo ending table level recovery
FRTT:	/bin/echo ending table level recovery
EETE:	/bin/echo done with tape operations
EEDE:	/bin/echo done with disk operations
