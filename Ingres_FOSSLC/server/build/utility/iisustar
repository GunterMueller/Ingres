#!/bin/bash
#  Copyright (c) 2004 Ingres Corporation
#
#  Name:
#	iisustar -- set-up script for Ingres Star Distributed DBMS
#
#  Usage:
#	iisustar
#
#  Description: This script should only be called by the Ingres
#	installation utility.  It sets up Ingres Star Distributed
#	DBMS on a server which already has the Ingres Intelligent
#	DBMS and Ingres Networking set up.
#
#  Exit Status:
#	0	setup procedure completed.
#	1	setup procedure did not complete.
#
#  DEST = utility
#----------------------------------------------------------------------------

# override value of II_CONFIG set by ingbuild
II_CONFIG=$II_SYSTEM/ingres/files
export II_CONFIG

if [ "$1" = "-rmpkg" ] ; then
   cp -p $II_CONFIG/config.dat $II_CONFIG/config.tmp
 
   trap "cp -p $II_CONFIG/config.tmp $II_CONFIG/config.dat; \
         rm -f $II_CONFIG/config.tmp; exit 1" 1 2 3 15
 
   cat $II_CONFIG/config.dat | grep -v '\.star' | \
       grep -v 'iistar_swap' >$II_CONFIG/config.new
 
   rm -f $II_CONFIG/config.dat
 
   mv $II_CONFIG/config.new $II_CONFIG/config.dat
 
   rm -f $II_CONFIG/config.tmp
 
   cat << !
  The Ingres Star Distributed DBMS has been removed.
 
!
 
else

WRITE_RESPONSE=false
READ_RESPONSE=false
RESOUTFILE=ingrsp.rsp
RESINFILE=ingrsp.rsp
RPM=false

# check for batch flag
if [ "$1" = "-batch" ] ; then
   BATCH=true
   NOTBATCH=false
   INSTLOG="2>&1 | cat >> $II_SYSTEM/ingres/files/install.log"
elif [ "$1" = "-vbatch" ] ; then
   BATCH=true
   NOTBATCH=false
   INSTLOG="2>&1 | tee -a $II_SYSTEM/ingres/files/install.log"
elif [ "$1" = "-mkresponse" ] ; then
   WRITE_RESPONSE=true
   BATCH=false
   NOTBATCH=true
   INSTLOG="2>&1 | tee -a $II_SYSTEM/ingres/files/install.log"
   if [ "$2" ] ; then
        RESOUTFILE="$2"
   fi
elif [ "$1" = "-exresponse" ] ; then
   READ_RESPONSE=true
   BATCH=true
   NOTBATCH=false
   INSTLOG="2>&1 | tee -a $II_SYSTEM/ingres/files/install.log"
   if [ "$2" ] ; then
        RESINFILE="$2"
   fi
elif [ "$1" = "-rpm" ] ; then
   RPM=true
   BATCH=true
   NOTBATCH=false
   INSTLOG="2>&1 | cat >> $II_SYSTEM/ingres/files/install.log"
else
   BATCH=false
   NOTBATCH=true
   INSTLOG="2>&1 | tee -a $II_SYSTEM/ingres/files/install.log"
   [ "$1" ] &&
   {
      # reset HOSTNAME for remote NFS client
      HOSTNAME=$1
      CLIENT_ADMIN=$II_SYSTEM/ingres/admin/$HOSTNAME
   }
fi

export BATCH
export INSTLOG
export WRITE_RESPONSE
export READ_RESPONSE
export RESOUTFILE
export RESINFILE

if [ "$WRITE_RESPONSE" = "false" ] ; then
trap "rm -f $II_SYSTEM/ingres/files/config.lck /tmp/*.$$ 1>/dev/null \
   2>/dev/null; exit 1" 0 1 2 3 15
fi

do_iisustar()
{
echo "Setting up Ingres Star Distributed DBMS..."

if [ "$WRITE_RESPONSE" = "false" ] ; then
trap "rm -f $II_SYSTEM/ingres/files/config.lck /tmp/*.$$ 1>/dev/null \
   2>/dev/null; exit 1" 0 1 2 3 15
fi

. iisysdep

. iishlib

check_response_file

if [ "$WRITE_RESPONSE" = "true" ] ; then
        mkresponse_msg
else ## **** Skip everything if we are in WRITE_RESPONSE mode ****


iisulock "Ingres Star Distributed DBMS setup" || exit 1

ACTUAL_HOSTNAME=$HOSTNAME

touch_files # make sure symbol.tbl and config.dat exist

if [ -f $II_SYSTEM/ingres/install/release.dat ]; then
    VERSION=`$II_SYSTEM/ingres/install/ingbuild -version=star` ||
    {
	cat << !

$VERSION

!
	exit 1
    }
else
    VERSION=`head -1 $II_SYSTEM/ingres/version.rel` ||
    {
	cat << !

Missing file $II_SYSTEM/ingres/version.rel

!
	exit 1
    }
fi


RELEASE_ID=`echo $VERSION | sed "s/[ ().\/]//g"`

SETUP=`iigetres ii.$CONFIG_HOST.config.star.$RELEASE_ID` || exit 1

[ "$SETUP" = "complete" ] &&
{
   cat << !

The $VERSION version of Ingres Star Distributed DBMS has already been
set up on "$HOSTNAME".

!
   $BATCH || pause
   trap : 0
   clean_exit
}

DBMS_SETUP=`iigetres ii.$CONFIG_HOST.config.dbms.$RELEASE_ID`
NET_SETUP=`iigetres ii.$CONFIG_HOST.config.net.$RELEASE_ID`

if [ "$DBMS_SETUP" != "complete" ] || [ "$NET_SETUP" != "complete" ]
then
   cat << !

The setup procedures for the following version of Ingres Intelligent
DBMS and Ingres Networking:

	$VERSION

must be completed up before Ingres Star Distributed DBMS can be set
up on host:

	$HOSTNAME

!
   exit 1
fi

II_INSTALLATION=`ingprenv II_INSTALLATION`

cat << ! 

This procedure will set up the following version of the Ingres Star
Distributed DBMS:

	$VERSION

to run on local host:

	$HOSTNAME
!

# generate default configuration resources
cat << !

Generating default configuration...
!
iiremres ii.$CONFIG_HOST.syscheck.star_swap

	# make sure upgrade installation gets larger stack size

if iigenres $CONFIG_HOST $II_CONFIG/star.rfm ; then
   iisetres "ii.$CONFIG_HOST.star.*.stack_size" 131072
   # Remove obsolete resources
   iiremres "ii.$CONFIG_HOST.star.*.rdf_cluster_nodes"
   iiremres "ii.$CONFIG_HOST.star.*.rdf_netcosts_rows"
   iiremres "ii.$CONFIG_HOST.star.*.rdf_nodecosts_rows"

else

   cat << !
An error occurred while generating the default configuration.

!
   exit 1
fi

iisetres ii.$CONFIG_HOST.config.star.$RELEASE_ID complete
remove_temp_resources
cat << !

Ingres Star Distributed DBMS has been successfully set up in this
installation.

!
fi #end WRITE_RESPONSE mode
$BATCH || pause
trap : 0
clean_exit
}
eval do_iisustar $INSTLOG
trap : 0
exit 0
fi
