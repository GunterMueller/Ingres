#!/bin/sh
#
# INGRES 6.1+ iisysdep
# created on Sat Jul 11 10:58:37 EDT 2020
# by the mksysdep shell script
#
# Configuration: a64_lnx   
# Release ID   : II 9.3.0 (a64.lnx/00)NPTL
#

#  Set WHOAMI to the current logon:
WHOAMI=`/usr/bin/whoami`
export WHOAMI
BPATHSED=s,.*/,,
DFCMD="exec df"
export BPATHSED
export DFCMD

#  Set up variables for the echon script
ECHO_CMD=/usr/bin/printf
ECHO_FLAG=
ECHO_CHAR=
export ECHO_CMD ECHO_FLAG ECHO_CHAR

#  Define the form of the ps command:
PSCMD="ps auxw"
export PSCMD

#  Define the form of the ipcs and ipcrm commands:
IPCSCMD=ipcs
IPCRM=ipcrm
IPCSCMD2=ipcs
export IPCSCMD IPCRM IPCSCMD2

#  Define the local of the ping cmd:
PINGCMD=/bin/ping
PINGARGS="-c 1"
export PINGCMD PINGARGS

#  Define the form of the ln cmd:
LINKCMD="ln -s"
export LINKCMD

#  Set a variable to the system's host name:
HOSTNAME=`uname -n`
SU_FLAGS=-c
export HOSTNAME
export SU_FLAGS

#  Define commands to extract various fields from ls -l
AWKBYTES="awk '{ print \$5 }'"
AWKOWNER="awk '{ print \$3 }'"
AWKTOTAL="awk '{s += \$5 } END {print (s * 3) / 1024}'"
export AWKBYTES AWKOWNER AWKTOTAL

#  Number of bytes in a single disk block:
BTPERBLK=1024
export BTPERBLK

#  Parameters from default.h (generated by mkdefault):
conf_INGRESII=TRUE
conf_libc6=TRUE
conf_ADD_ON32=TRUE
conf_SVR_AR=TRUE
conf_DBL=TRUE
conf_CAS_ENABLED=TRUE
conf_BUILD_SPATIAL=TRUE
XNETLIB=
NETSCAPE_API_FLAG=-DXP_UNIX
APACHE_API_FLAG=-DLINUX=2
VERS=a64_lnx
VERS64=a64_lnx
a64_lnx=
CPP=/lib/cpp
CCMACH="-fsigned-char -fno-strength-reduce -D_REENTRANT -DLINUX -D_GNU_SOURCE -DXLIB_ILLEGAL_ACCESS "
CCMACH32=-m32 
CCLDMACH=-rdynamic 
CCLDMACH32=-m32 
CCLDSERVER=
CCPICFLAG=-fPIC
SLSFX=so
MWSLSFX=so
CGISFX=cgi
LDLIBPATH="/lib64 /usr/lib64 /usr/local/lib64"
LDLIBPATH64=
LIBMACH=
LDLIB="-lpthread -lrt -lm -lc -lcrypt -ldl -lgcc_s"
LDLIBMACH="-lpthread -lrt -lm -lc -lcrypt -ldl -lgcc_s"
LDLIBMACH64="-lpthread -lrt -lm -lc -lcrypt -ldl -lgcc_s"
LD_ICE_FLAGS=
CC=cc
OPTIM=-O
LEVEL1_OPTIM=-O1
SHELLHEADER="#!/bin/sh"
HASRANLIB=1
XARGS=1
SYS5=1
NO_DIRFUNC=1
INGRES6=1
SYSGRAPHLIB=
SYMLINK=false
CXX=g++
CXX_DEFS=
XERC_DEFS="-O -DXML_USE_NATIVE_TRANSCODER -DXML_USE_INMEM_MESSAGELOADER -DXML_USE_NETACCESSOR_SOCKET "
XERC_LIBS=
XERCVERS=27
LINKTESTFLAG=-h

if ${LibTest_in_iisysdep:-true} ; then
#  Remove references to libraries that aren't present on this machine:
# Create dummy C program to link to
LIBTST_C=/tmp/libtst$$.c
LIBTST_EXE=/tmp/libtst$$
LIBTST_O=/tmp/libtst$$.o
cat << LIBTST >  ${LIBTST_C}
int
main( int argc, char **argv )
{
    exit(0);
}
LIBTST
if ( $CC $CCMACH -c -o $LIBTST_O $LIBTST_C ) > /dev/null 2>&1
then
  sedcmd=
  for word in `echo $LDLIB $LIBMACH | tr ' '  '\012' | sort | uniq`
  do
    lib=`expr $word : '-l\(.*\)$'`

    if [ -n "$lib" ]
    then
	 sedtail=" -e 's/$word//'"
	 if ( $CC $CCMACH -o $LIBTST_EXE $LIBTST_O -l${lib} ) > /dev/null 2>&1
	 then
	    rm -f $LIBTST_EXE
	 else
	    sedcmd="$sedcmd$sedtail"
	 fi
    fi
  done
  if [ -n "$sedcmd" ]
  then
    LDLIB=`echo $LDLIB | eval "sed $sedcmd"`
    LIBMACH=`echo $LIBMACH | eval "sed $sedcmd"`
  fi
  sedcmd=
  lpath=
  for word in $LDLIBMACH
  do
    lpathone=`expr $word : '-L\(.*\)$'`

    if [ -n "$lpathone" ]
    then
	 lpath="$lpath"-L"$lpathone "
    fi
  done
  if [ -n "$lpath" ]
  then
    for word in $LDLIBMACH
    do
      lib=`expr $word : '-l\(.*\)$'`
      if [ -n "$lib" ]
      then
	 sedtail=" -e 's/$word//'"
	 if ( $CC $CCMACH -o $LIBTST_EXE $LIBTST_O $lpath -l${lib} ) > /dev/null 2>&1
	 then
	    rm -f $LIBTST_EXE
	 else
	    sedcmd="$sedcmd$sedtail"
	 fi
      fi
    done
    if [ -n "$sedcmd" ]
    then
      LDLIBMACH=`echo $LDLIBMACH | eval "sed $sedcmd"`
    fi
  fi
fi
rm -f $LIBTST_EXE $LIBTST_C $LIBTST_O
fi
USE_SHARED_LIBS=true
USE_SHARED_SVR_LIBS=false
USE_ARCHIVE_SVR_LIB=true
SLSFX=so
export USE_SHARED_LIBS USE_SHARED_SVR_LIBS SLSFX LD_RUN_PATH

#---
#--- Everything past this point is explicitly based on the config string
#---
AWK=awk
ETCRCFILES=/etc/init.d
RCTMPLT=lnx.rc
RC1=/etc/rc.d/rc1.d
RC2=/etc/rc.d/rc2.d
RC3=/etc/rc.d/rc3.d
RC4=/etc/rc.d/rc4.d
RC5=/etc/rc.d/rc5.d
RCDEFLNK="2 3 5"
RCSTART=S90
RCSTOP=K10
CHECK_MEMORY_RESOURCES=true
OUTPUT_SINK="> /dev/null"
ACPART_NOT_ALLOWED=true
DF="df"
export ETCRCFILES CHECK_MEMORY_RESOURCES OUTPUT_SINK ACPART_NOT_ALLOWED DF
 
CHECK_SWAP_SPACE=false
USE_SYMBOLIC_LINKS=false
SED_MAJOR_MINOR='s/^.* \([0-9]*\), *\([0-9]*\) .*$/\1 \2/'
export CHECK_SWAP_SPACE SED_MAJOR_MINOR
CHECK_C2=true
SET_B1_PRIV=false
SETLABEL=true
export SET_B1_PRIV SETLABEL
READ_KMEM=false
export READ_KMEM
 
AR_L_OPT=l
LSSIZEFLAGS="-l --no-group"
LSBLOCKFLAGS=-ls
CLUSTERSUPPORT=false
SPAT_LIB_NAME_WITH_FULLPATH=false
SPAT_LIB_IS_STATIC_ARCHIVE=false
UDT_LIB_IS_STATIC_ARCHIVE=false
